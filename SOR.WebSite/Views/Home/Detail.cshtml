@using SOR.ViewModel.Catalogs.Reports
@model GetReportViewModel
@using SOR.ViewModel
@using SOR.Data.Enum
@using SOR.ViewModel.Catalogs.Reports.Report
@{
    ViewData["Title"] = "Chi tiết bài đăng - ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main>
    <div class="bg-left">
        <div class="title-left" style="text-transform: uppercase;padding-bottom:5px;">Thông tin phản ánh</div>
    </div>
    <div style="display: flex;justify-content: space-between;padding-top:10px;">
        <div>
            <span style="font-style: italic;font-size: 12px;">
                Ngày gửi <strong> @Model.CreateDate.ToString("dd/MM/yyyy")</strong> -
            </span>
            <span style="font-style: italic;font-size: 12px;">
                Thời hạn xử lý: <strong>@Model.DateSolve.ToString("dd/MM/yyyy")</strong>
            </span>
        </div>
        <div>
            <span style="font-style: italic;font-size: 12px;">
                Tình trạng:
                @switch (Model.IsStatus)
                {
                    case IsStatus.Complete:
                        {
                            <strong> Hoàn thành</strong>
                            break;
                        }
                    case IsStatus.Pending:
                        {
                            <strong>Chưa giải quyết</strong>
                            break;
                        }
                    case IsStatus.UnPending:
                        {
                            <strong>Không giải quyết</strong>
                            break;
                        }
                    case IsStatus.Waiting:
                        {
                            <strong>Chờ duyệt</strong>
                            break;
                        }
                }
                -
            </span>
            <span style="font-style: italic;font-size: 12px;">
                Tình thái:
                @switch (Model.IsReport)
                {
                    case IsReport.Urgent:
                        {
                            <strong>Khẩn</strong>
                            break;
                        }
                    case IsReport.Normal:
                        {
                            <strong>Bình thường</strong>
                            break;
                        }
                    case IsReport.Wait:
                        {
                            <strong>Chờ xác định</strong>
                            break;
                        }
                }
                -
            </span>
            <span style="font-style: italic;font-size: 12px;">
                Lượt xem: <strong>@Model.Views</strong>
            </span>
        </div>
    </div>
    <div>
        <p>@Model.Title</p>
        <p>@Model.Content</p>
    </div>
    <div style="padding:10px 10px;">
        <div id="product-carousel" class="carousel slide" data-ride="carousel">
            <div id="product-carousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner border">
                    @for (int i = 0; i < Model.rProofs.Count; i++)
                    {
                        if (i == 0)
                        {
                            if (Model.rProofs[i].IsFile == IsFile.Image)
                            {
                                <div class="carousel-item active">
                                    <img style="width:100%;" src="@SystemContants.MainConectionAPI/@Model.rProofs[i].Name" alt="Image">
                                </div>
                            }
                            else if (Model.rProofs[i].IsFile == IsFile.Video)
                            {
                                <div class="carousel-item active">
                                    <video style="width:100%;" controls>
                                        <source src="@SystemContants.MainConectionAPI/@Model.rProofs[i].Name" type="video/mp4">
                                    </video>
                                </div>
                            }

                        }
                        else
                        {
                            if (Model.rProofs[i].IsFile == IsFile.Image)
                            {
                                <div class="carousel-item">
                                    <img style="width:100%;" src="@SystemContants.MainConectionAPI/@Model.rProofs[i].Name" alt="Image">
                                </div>
                            }
                            else if (Model.rProofs[i].IsFile == IsFile.Video)
                            {
                                <div class="carousel-item">
                                    <video style="width:100%;" controls>
                                        <source src="@SystemContants.MainConectionAPI/@Model.rProofs[i].Name" type="video/mp4">
                                    </video>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
            <a class="carousel-control-prev" href="#product-carousel" style="height:380px !important;z-index:unset !important;" data-slide="prev">
                <i class="fa fa-2x fa-angle-left" style="color:white !important; font-size:50px !important;"></i>
            </a>
            <a class="carousel-control-next" href="#product-carousel" style="height:380px !important;z-index:unset !important;" data-slide="next">
                <i class="fa fa-2x fa-angle-right" style="color:white !important; font-size:50px !important;"></i>
            </a>
        </div>
    </div>
    <div class="bg-left">
        <div class="title-left" style="text-transform: uppercase;">Kết quả xử lý</div>
    </div>
    <div style="padding:10px 15px;">

        @if (Model.rResults.Count <= 0 || Model.rResults == null)
        {
            <p>
                Chưa có thông tin xử lý
            </p>
        }
        else
        {
            <div style="display:flex;justify-content: space-between;">
                <div>
                    @*<span style="font-weight:bold;text-transform: uppercase;font-size: 15px;">Phường Bình Khánh</span>*@
                    <div style="font-weight:bold;text-transform: uppercase;font-size: 15px;">@Model.rResults.FirstOrDefault().UserName</div>
                </div>
                <div>
                    <span style="color:grey;font-size: 14px;">
                        <i class="far fa-clock"></i>
                        Thời gian:
                        <span>@Model.rResults.FirstOrDefault().Date.ToString("dd/MM/yyyy ( HH:mm:ss )")</span>
                    </span>
                </div>
            </div>
            <hr>
            <p>
                @Model.rResults.FirstOrDefault().Name
            </p>
            <div style="padding-bottom:10px;"></div>
        }
    </div>
</main>

@*<main>
    @await Html.PartialAsync("Chat")
  </main>*@

